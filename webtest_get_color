[ "$1" ] && fpath=$1 || { echo "Usage: ${0##*/} [config]"; exit 1; }
[ -e $fpath ] || { echo "ERROR(2) config file not found ($1)"; exit 2; }

boudary=$(uuidgen)
tmp=$(mktemp)

awk -F";" '{for (i = 1; i <= NF; i++) printf $i " "; print ""}' $1 > $tmp
while read link timeout timax testlimit pattern expected
do
#   echo "[DEBUG] config: $link;$timeout;$timax;$testlimit;$pattern;$expected"
	somedate=$(date +%s -d'-3 day')
	evalink=$(eval "echo $(sed 's/\&/\\\&/g' <<< $link)")
	echo "[<color=Cyan>LINK</color>] $evalink"
	resp=$(curl -sw "$boudary%{time_total}" --connect-timeout $timeout -m $timax "$evalink")

#	echo "[DEBUG] resp:\n$resp"

	respTime=$(echo $resp | grep -o "$boudary.*" | sed "s/$boudary//; s/\,/\./; s/$/*1000.0/;" | bc -l)
#	echo "[DEBUG] respTime'$respTime'"

	respTimeOK=$(echo $respTime"<($testlimit*1000)" | bc -l)
#	echo "[DEBUG] respTimeOK'$respTimeOK'"

	respTimeStr=$(sed 's/\.[0-9]\{0,7\}//' <<< $respTime)
#	echo "[DEBUG] respTimeStr'$respTimeStr'"

	patternCount=$(grep -oF "$pattern" <<< $resp | wc -l)
#	echo "[DEBUG] patternCount'$patternCount'"

	if [[ "$respTimeOK" -eq 1 && "$patternCount" -ge "$expected" ]]
	then
		echo -n "<color=Green>OK</color>,   "
		printf "%5s</color>ms, " "$respTimeStr"
		echo "[<color=Yellow>$pattern</color>] - $patternCount/$expected"
	else
		echo -n "<color=Red>FAIL, "
		echo -n $([ "$respTimeOK" -eq 1 ] && echo '<color=Green>')
		printf "%5s</color>ms, " "$respTimeStr"
		echo -n "[<color=Yellow>$pattern</color>] - "
		echo -n $([[ "$patternCount" && "$patternCount" -ge "$expected" ]] && echo '<color=Green>' || echo '<color=Red>')
		echo "$patternCount</color>/$expected"
	fi 

	echo ---------------------------------------------
done < $tmp | colorize

rm $tmp
